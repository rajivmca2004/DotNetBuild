# Define 'Service' to expose backend application deployment
apiVersion: v1
kind: Service
metadata:
  name: dotnetbuild
spec:
  selector:  # backend application pod lables should match these
    app: dotnetbuild
    tier: backend
  ports:
  - protocol: "TCP"
    port: 8080   
  type: ClusterIP  # use NodePort, if you are not running Kubernetes on cloud

---
# Configure 'Deployment' of backend application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotnetbuild
  labels:
    app: dotnetbuild
    tier: backend
spec:
  replicas: 1    # Number of replicas of back-end application to be deployed
  selector:
    matchLabels: # backend application pod labels should match these
      app: dotnetbuild
      tier: backend
  template:
    metadata:
      labels: # Must macth 'Service' and 'Deployment' labels
        app: dotnetbuild
        tier: backend
    spec:
      containers:
      - name: dotnetbuild
        image: harbor.wipropilot.pks-wipro.com/demo-app/dotnetbuild:latest # docker image of backend application
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"


---
#Configure Ingress
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dotnetbuild-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
    - hosts:
        - dotnetbuild.demo-cluster.pks-wipro.com
  rules:
    - host: dotnetbuild.demo-cluster.pks-wipro.com
      http:
        paths:
          - path: /
            backend:
              serviceName: dotnetbuild
              servicePort: 8080
